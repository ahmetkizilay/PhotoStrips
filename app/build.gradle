import groovy.json.JsonSlurper

def keyFile = null
if(new File("keys.json").exists()) {
    keyFile = new File("keys.json")
}
else {
    keyFile = new File("../keys.json");
}
def keysJSON = new JsonSlurper().parseText(keyFile.text)

apply plugin: 'android'

android {
    compileSdkVersion 17
    buildToolsVersion '19.1.0'
    defaultConfig {
        applicationId 'com.ahmetkizilay.image.photostrips'
        minSdkVersion 9
        targetSdkVersion 19
        versionCode 12
        versionName '1.2.3'
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_5
            targetCompatibility JavaVersion.VERSION_1_5
        }
    }
    signingConfigs {
        release {
            storeFile file(keysJSON.keyStorePath)
            storePassword keysJSON.keyStorePass
            keyAlias keysJSON.keyAlias
            keyPassword keysJSON.keyPassword
        }
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            jniDebugBuild false
            signingConfig signingConfigs.release
        }
    }
    productFlavors {
    }
    dexOptions {
        preDexLibraries = false
    }
}

dependencies {
    compile files('libs/android-support-v13.jar')
    compile(name: 'listapps', ext: 'aar')
    compile(name: 'donations', ext: 'aar')
    compile 'com.android.support:appcompat-v7:19+'
}

repositories {
    flatDir { dirs 'aars' }
}
